-- Device initialization script for VAS
-- This script will run after the database is created to populate initial devices

-- Insert the three cameras that were previously added
INSERT INTO devices (
    id,
    name,
    device_type,
    manufacturer,
    model,
    ip_address,
    port,
    rtsp_url,
    username,
    password,
    location,
    description,
    tags,
    device_metadata,
    hostname,
    vendor,
    resolution,
    codec,
    fps,
    last_seen,
    status,
    credentials_secure,
    encrypted_credentials,
    created_at,
    updated_at
) VALUES 
(
    gen_random_uuid(),
    'Live Camera 1',
    'ip_camera',
    'Generic',
    'IP Camera',
    '172.16.16.122',
    554,
    'rtsp://172.16.16.122:554/stream',
    'admin',
    'admin123',
    'Location 1',
    'Live Camera 1 - Network surveillance camera',
    '["surveillance", "live", "network"]',
    '{"type": "ip_camera", "network": "internal"}',
    'camera1.local',
    'Generic',
    '1920x1080',
    'H.264',
    30,
    NOW(),
    'ONLINE',
    false,
    null,
    NOW(),
    NOW()
),
(
    gen_random_uuid(),
    'Live Camera 2',
    'ip_camera',
    'Generic',
    'IP Camera',
    '172.16.16.123',
    554,
    'rtsp://172.16.16.123:554/stream',
    'admin',
    'admin123',
    'Location 2',
    'Live Camera 2 - Network surveillance camera',
    '["surveillance", "live", "network"]',
    '{"type": "ip_camera", "network": "internal"}',
    'camera2.local',
    'Generic',
    '1920x1080',
    'H.264',
    30,
    NOW(),
    'ONLINE',
    false,
    null,
    NOW(),
    NOW()
),
(
    gen_random_uuid(),
    'Test Camera',
    'ip_camera',
    'Test',
    'Test Camera',
    '192.168.1.100',
    554,
    'rtsp://192.168.1.100:554/stream',
    'admin',
    'admin123',
    'Test Location',
    'Test Camera for development',
    '["test", "development"]',
    '{"type": "test_camera", "network": "test"}',
    'testcamera.local',
    'Test',
    '1280x720',
    'H.264',
    25,
    NOW(),
    'ONLINE',
    false,
    null,
    NOW(),
    NOW()
)
ON CONFLICT (ip_address) DO NOTHING;

-- Log the initialization
INSERT INTO discovery_tasks (
    id,
    task_id,
    status,
    subnet,
    total_ips,
    scanned_ips,
    found_devices,
    created_at,
    updated_at
) VALUES (
    gen_random_uuid(),
    'init-devices-' || extract(epoch from now())::text,
    'completed',
    'initialization',
    3,
    3,
    3,
    NOW(),
    NOW()
) ON CONFLICT DO NOTHING; 