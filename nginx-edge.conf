# Nginx Configuration - ASRock Edge Optimized
# Optimized for ASRock iEP-7040E-024 edge deployment
# Handles 6 camera streams with load balancing for YOLO inference

worker_processes auto;  # Use all available cores efficiently
worker_rlimit_nofile 65535;  # High file descriptor limit for concurrent connections

events {
    worker_connections 4096;    # Optimized for edge deployment
    use epoll;                  # Linux-optimized event handling
    multi_accept on;            # Accept multiple connections simultaneously
}

http {
    # Basic settings optimized for edge
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;          # Hide nginx version for security

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging optimized for edge deployment
    log_format edge_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" '
                          'uht="$upstream_header_time" urt="$upstream_response_time" '
                          'unit_id="$unit_id"';

    access_log /var/log/nginx/access.log edge_format;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression for frontend assets
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting for API endpoints
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=stream_limit:10m rate=30r/s;

    # Upstream backends
    upstream vas_backend_edge {
        server vas-backend-edge:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;  # Keep connections alive for better performance
    }

    upstream janus_websocket_edge {
        server localhost:8188 max_fails=3 fail_timeout=30s;
        keepalive 8;   # WebSocket connections
    }

    upstream janus_http_edge {
        server localhost:8088 max_fails=3 fail_timeout=30s;
        keepalive 16;  # HTTP API connections
    }

    upstream edge_api {
        server edge-api:3001 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }

    # Main server block for edge unit
    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Add unit ID to all responses for debugging
        set $unit_id "${UNIT_ID}";
        add_header X-Edge-Unit-ID $unit_id always;

        # Frontend static files
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;

            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # VAS Backend API
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;
            
            proxy_pass http://vas_backend_edge;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Edge-Unit-ID $unit_id;
            proxy_cache_bypass $http_upgrade;

            # Timeouts optimized for edge
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Edge API for unit management
        location /edge-api/ {
            limit_req zone=api_limit burst=10 nodelay;
            
            proxy_pass http://edge_api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Edge-Unit-ID $unit_id;

            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Janus WebSocket (direct connection for optimal performance)
        location /janus-ws {
            limit_req zone=stream_limit burst=50 nodelay;
            
            proxy_pass http://janus_websocket_edge;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Edge-Unit-ID $unit_id;

            # WebSocket specific timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;    # 5 minutes for long-running streams
            proxy_read_timeout 300s;    # 5 minutes for long-running streams
            proxy_buffering off;        # Disable buffering for real-time streams
        }

        # Janus HTTP API
        location /janus/ {
            limit_req zone=api_limit burst=30 nodelay;
            
            proxy_pass http://janus_http_edge/janus/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Edge-Unit-ID $unit_id;

            # API timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Edge Unit ${UNIT_ID} - OK\n";
            add_header Content-Type text/plain;
            add_header X-Edge-Unit-ID $unit_id;
        }

        # System metrics for monitoring
        location /metrics {
            proxy_pass http://edge-monitor:9100/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Edge-Unit-ID $unit_id;
            
            # Restrict access in production
            # allow 192.168.0.0/16;
            # allow 172.16.0.0/12;
            # deny all;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Future: HTTPS configuration for production deployment
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-edge-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/edge-cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/edge-key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Include same location blocks as HTTP server
    # }
}
